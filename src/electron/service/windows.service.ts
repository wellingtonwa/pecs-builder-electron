import { BrowserWindow, dialog } from "electron";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

class WindowService {
    mainWindow: BrowserWindow;

    createMainWindow() {
        if (!this.mainWindow || this.mainWindow.isDestroyed()) {
          this.mainWindow = new BrowserWindow({
            height: 605,
            width: 540,
            autoHideMenuBar: true,
            webPreferences: {
                preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
            },
          });

          this.mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

        }
        this.mainWindow.show();
    }

    async openFolderSelection(title: string, buttonLabel: string){
      return dialog.showOpenDialog(this.mainWindow, {
          properties: ['openDirectory', 'createDirectory', 'promptToCreate', 'dontAddToRecent'],
          buttonLabel,
          title,
        });
    } 

    async openSaveFileDialog(title: string, buttonLabel: string, defaultPath: string){
      return dialog.showSaveDialog(this.mainWindow, {
          properties: ['showOverwriteConfirmation', 'createDirectory'],
          buttonLabel,
          title,
          defaultPath,
        });
    } 
}

export default new WindowService;
